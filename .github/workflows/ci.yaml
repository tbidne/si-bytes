name: ci

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  cabal:
    strategy:
      fail-fast: false
      matrix:
        ghc:
          - "8.10.7"
          - "9.0.2"
          - "9.2.8"
          - "9.4.8"
          - "9.6.6"
          - "9.8.4"
          - "9.10.1"
          - "9.12.1"
        platform:
          - os: "macos-latest"
            set-env: "export"
          - os: "ubuntu-latest"
            set-env: "export"
          - os: "windows-latest"
            set-env: "set"
        # Evidently mac has trouble with these on CI now.
        exclude:
          - {ghc: "8.10.7", platform: {os: "macos-latest", set-env: "export"}}
          - {ghc: "9.0.2", platform: {os: "macos-latest", set-env: "export"}}
    runs-on: ${{ matrix.platform.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}

      - name: Configure
        run: cabal configure --enable-tests --ghc-options -Werror

      - name: Compile
        run: cabal build lib:si-bytes

      - name: Doctests
        if: ${{ matrix.ghc == '9.8.4'
             || matrix.ghc == '9.10.1'
             || matrix.ghc == '9.12.1'
            }}
        run: |
          echo "*** Installing doctest ***"
          cabal install --ignore-project doctest --flag cabal-doctest

          echo "*** Running doctest ***"
          cabal doctest

      - name: Unit Tests
        run: cabal test unit --test-options "--hedgehog-tests 100000"
  nix:
    strategy:
      fail-fast: false
      matrix:
        os:
        - "macos-latest"
        - "ubuntu-latest"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup nix
        uses: cachix/install-nix-action@v30
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Compile & Test
        run: nix build
  lint:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4

      - name: Setup nix
        uses: cachix/install-nix-action@v30
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Formatting
        run: |
          nix run .#format
          git diff --exit-code --color=always

      - name: HLint
        run: nix run .#lint
